name: MSBuild MapWinGIS+Gdal3
on:
  push:
    branches:
      - feature/GDAL3-VS2019
    paths-ignore:
      - '**.md'
      #- '**.yml'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.yml'
      - 'docs/**'
env:
  # Path to the solution files relative to the root of the project.
  SUPPORTLIBS_SOLUTION_FILE_PATH: ./Support/SupportLibs.sln
  MAPWINGIS_SOLUTION_FILE_PATH: ./src/MapWinGIS.sln
  UNITTESTS_SOLUTION_FILE_PATH: ./unittest-net6/unittest-net6.sln

  # Configuration type to build.
  BUILD_CONFIGURATION: Release

jobs:
  build:
    name: Build MapWinGIS
    runs-on: windows-2019

    strategy:
      matrix:
        # platform: ['Win32', 'x64']
        platform: ['Win32']

    steps:
    - uses: actions/checkout@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    # Download GisInternals zips
    - name: Download GisInternals zips
      uses: Azure/powershell@v1
      with:
        # Specify the Az PowerShell script here.
        inlineScript: |
          Invoke-WebRequest -Uri "https://github.com/MapWindow/Dependencies/raw/main/GisInternals/release-1928-gdal-3.zip" -OutFile ".\Support\release-1928-gdal-3.zip"
          Invoke-WebRequest -Uri "https://github.com/MapWindow/Dependencies/raw/main/GisInternals/release-1928-gdal-3-libs.zip" -OutFile ".\Support\release-1928-gdal-3-libs.zip"
          Invoke-WebRequest -Uri "https://github.com/MapWindow/Dependencies/raw/main/GisInternals/release-1928-x64-gdal-3.zip" -OutFile ".\Support\release-1928-x64-gdal-3.zip"
          Invoke-WebRequest -Uri "https://github.com/MapWindow/Dependencies/raw/main/GisInternals/release-1928-x64-gdal-3-libs.zip" -OutFile ".\Support\release-1928-x64-gdal-3-libs.zip"
          ls .\Support\
        # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
        azPSVersion: "latest"
        # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
        errorActionPreference: Stop
        # If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream.
        failOnStandardError: true
    
    # Unzip zips by calling powershell script
    - name: Unzip
      working-directory: ./Support/
      shell: pwsh
      run: .\unpackVS2019GISInternals.ps1
             
    # Build support libs
    - name: Build SupportLibs ${{matrix.platform}}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      # MSBuild SupportLibs.sln /t:Rebuild /p:Configuration=Release /p:Platform="Win32"
      run: msbuild /m /p:Configuration=Release /p:Platform=${{matrix.platform}} ${{env.SUPPORTLIBS_SOLUTION_FILE_PATH}}
  
    # Build MapWinGIS
    - name: Build MapWinGIS ${{matrix.platform}}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      # MSBuild SupportLibs.sln /t:Rebuild /p:Configuration=Release /p:Platform="Win32"
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{matrix.platform}} ${{env.MAPWINGIS_SOLUTION_FILE_PATH}}

    # Save artifacts:
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: binaries-${{matrix.platform}}
        path: .\src\bin\Release\${{matrix.platform}}\**\*
        
  unit-tests:
    name: Unit Testing
    needs: build
    runs-on: windows-2022
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.x'

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Download MapWinGIS (Win32) binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries-Win32
        path: .\src\bin\Release\Win32\
        
    # TODO: Copy and run regMapWinGIS.cmd

    - name: Unit Testing (Win32)
      run: dotnet test ${{env.UNITTESTS_SOLUTION_FILE_PATH}} --runtime x86
      
   # Unit testing      
   # - name: Setup dotnet
   #   uses: actions/setup-dotnet@v1
   #   with:
   #     dotnet-version: '6.x'

   # - name: Unit Testing
   #   run: dotnet test ${{env.UNITTESTS_SOLUTION_FILE_PATH}} --runtime x86 --no-self-contained

   # TODO: Create installer using innosetup   
   # TODO: Publish installer to GitHub Releases      
